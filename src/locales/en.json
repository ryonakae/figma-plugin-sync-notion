{
  "Tabs": {
    "fetch": "Fetch",
    "list": "List",
    "utilities": "Utilities",
    "settings": "Settings"
  },
  "Fetch": {
    "databaseId": "Database ID",
    "integrationToken": "Integration token",
    "keyPropertyName": "Key property name",
    "valuePropertyName": "Value property name",
    "fetchButton": {
      "label": "Fetch text from Notion",
      "description": "Fetches text from a database in Notion. The data is cached to this document and restored at next time it is launched. If you have updated Notion database, click this button again."
    },
    "clearCacheButton": "Clear cache ({{length}} items)"
  },
  "List": {
    "filter": {
      "placeholder": "Filter key or value property",
      "clearButton": "Clear"
    },
    "sortValue": {
      "key": "Key",
      "value": "Value",
      "created_time": "Created (default)",
      "last_edited_time": "Last edited"
    },
    "sortOrder": {
      "ascending": "Ascending",
      "descending": "Descending (Default)"
    },
    "statusBar": {
      "text": "Click row to apply key & value to text or copy",
      "count": "{{length}} items"
    },
    "empty": {
      "text": "No items.",
      "fetchButton": "Fetch text from Notion"
    }
  },
  "Utilities": {
    "targetTextRange": {
      "label": "Target text range",
      "options": {
        "selection": "Selection",
        "currentPage": "Current page",
        "allPages": "All pages"
      }
    },
    "includeComponents": "Include text in components",
    "includeInstances": "Include text in instances",
    "applyValueButton": {
      "label": "Apply value to text content",
      "description": "Apply value property to text content obtained from layer name renamed to key property. You can pass parameters (e.g., #userInfo?name=John&age=24). If there are variables in Notion database value, it will replace the text with that value in it."
    },
    "renameLayerButton": {
      "label": "Rename layer from text content",
      "description": "Rename layer to key property obtained from text content. The text content and the value property in Notion database must match exactly. Parameters are not supported. It is useful when text in Figma and Notion are the same, but renaming the layers is cumbersome."
    },
    "highlightTextButton": {
      "label": "Highlight text layer",
      "description": "Highlight text layer that has correct layer name format (# + Key property) and the key exists in Notion database. Text is highlighted in blue if the key is correct and exists. Text is highlighted in red if it's incorrect. It is useful to check that the layer names are formatted correctly or that they have no typos."
    }
  },
  "Settings": {
    "language": {
      "label": "Language",
      "options": {
        "english": "English",
        "japanese": "Japanese"
      }
    },
    "buttons": {
      "pluginPage": "Plugin page",
      "github": "GitHub"
    }
  },
  "KeyValueList": {
    "empty": "No items.",
    "loading": "Loading..."
  },
  "KeyValueRow": {
    "key": "Key",
    "value": "Value",
    "applyKeyValueButton": "Apply key & value to selected text",
    "openBrowserButton": "Open in browser"
  },
  "notifications": {
    "Fetch": {
      "loading": "Please wait a moment.",
      "error": {
        "failedFetch": "Failed to fetch database.",
        "noPages": "No pages in this database.",
        "wrongKeyName": "Key property name is wrong.",
        "wrongValueName": "Value property name is wrong.",
        "wrongKeyType": "Key property type is wrong.",
        "wrongValueType": "Value property type is wrong."
      },
      "finish": "Fetch finish.",
      "clearCache": "Cache cleared."
    },
    "Settings": {
      "updateLanguage": "Language updated."
    },
    "KeyValueRow": {
      "copy": "Copied {{title}} to clipboard."
    }
  }
}
